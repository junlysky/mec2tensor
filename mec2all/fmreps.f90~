Subroutine FMREPS(ANBTP,ANGS,PTTP,ANGS2,AN,PT,DSR,mt,MOMTEN, LUNIT1,LUNIT2)
  implicit none

!	Input: A and N (trned and plunge), or P and T or dip, strike
!	  and rake (A&R convention) or moment tensor (A&R)
!	Output: the other representations plus the auxiliary plane.
!	PTTP:  4 parameters, trend and plunge for P and T
!	  P trend and plunge, T trend and plunge
!	ANBTP  6 parameters, t and p for A, N and B respectively.
!	ANGS   3 parameters,  dip, strike and rake for first plane
!	ANGS2  3 parameters, dip strike and rake for auxiliary plane
!	AN, PT, DSR are LOGICAL variables which are true if
!	  A and N, P and T or dip-strike-rake are input
!	MOMTEN  6 parameters:  the moment tensor (unit scalar
!	  magnitude) D & W convention
!	Angles come in and go out in degrees.
!	If LUNIT1 and/or LUNIT2 are positive, the representations
!	  are written on those logical unit numbers.

logical AN,PT,DSR,MT
real*4 MOMTEN(6)
integer LUNIT1, LUNIT2
real PTTP(4),ANGS(3),ANGS2(3),ANBTP(6)

integer j,i
real rdeg,pi
real eigen(3)



RDEG = 45.0/ATAN(1.0)
PI = 4.0*ATAN(1.0)


if (MT) then
   call mt_in(PTTP,eigen)
   call PTTPIN(PTTP,ANGS,ANGS2,ANBTP,MOMTEN,eigen)
   
else IF (PT) THEN
   do 100 J=1,4
100	  PTTP(J) = PTTP(J)/RDEG
      call PTTPIN(PTTP,ANGS,ANGS2,ANBTP,MOMTEN,eigen)

elseif (DSR) then
do 300 J=1,3
300	  ANGS(J) = ANGS(J)/RDEG
   call DSRIN(ANGS,ANBTP,ANGS2,PTTP,MOMTEN,eigen)

end if
do 400 I=1,3
   ANGS(I) = ANGS(I)*RDEG
   ANGS2(I) = ANGS2(I)*RDEG
   PTTP(I) = PTTP(I)*RDEG
   ANBTP(I) = ANBTP(I)*RDEG
400	CONTINUE
   ANBTP(4) = ANBTP(4)*RDEG
   ANBTP(5) = ANBTP(5)*RDEG
   ANBTP(6) = ANBTP(6)*RDEG
   PTTP(4) = PTTP(4)*RDEG

   if (LUNIT1 .GT. 0) THEN

      write(lunit1,1)
      write(lunit1,*) ' '
      write(*,*) ' '
      write(lunit1,51)
      write(lunit1,52)
      write(lunit1,53) MOMTEN
      write(lunit1,*) ' '
      write(*,*) ' '
      WRITE (lunit1,2) ANGS(2),ANGS(1),ANGS(3)
      WRITE(lunit1,3)  ANGS2(2),ANGS2(1),ANGS2(3)
      write(*,*) ' '
       write(lunit1,*) ' '
      write (lunit1,4)
      write (lunit1,5)
      WRITE (lunit1,6) (PTTP(J),J=1,2),eigen(1)
      write(lunit1,7) (ANBTP(J),J=5,6),eigen(2)
      WRITE(lunit1,8) (PTTP(J),J=3,4),eigen(3)

   END IF

IF (LUNIT2 .GT. 0) THEN
   if (lunit2 .eq. 5) then
      write(*,1)
      write(*,*) ' '
      write(*,51)
      write(*,52)
      write(*,53) MOMTEN
        write(*,*) ' '
      WRITE (*,2) ANGS(2),ANGS(1),ANGS(3)
      WRITE(*,3)  ANGS2(2),ANGS2(1),ANGS2(3)
      write(*,*) ' '
      write (*,4)
      write (*,5)
      WRITE (*,6) (PTTP(J),J=1,2),eigen(1)
      write(*,7) (ANBTP(J),J=5,6),eigen(2)
      WRITE(*,8) (PTTP(J),J=3,4),eigen(3)

   else
      write(lunit2,1)
      write(*,*) ' '
       write(lunit2,*) ' '
      write(lunit2,51)
      write(lunit2,52)
      write(lunit2,53) MOMTEN
      write(*,*) ' '
        write(lunit2,*) ' '
      WRITE (lunit2,2) ANGS(2),ANGS(1),ANGS(3)
      WRITE(lunit2,3)  ANGS2(2),ANGS2(1),ANGS2(3)
      write(*,*) ' '
        write(lunit2,*) ' '
      write (lunit2,4)
      write (lunit2,5)
      WRITE (lunit2,6) (PTTP(J),J=1,2),eigen(1)
      write(lunit2,7) (ANBTP(J),J=5,6),eigen(2)
      WRITE(lunit2,8) (PTTP(J),J=3,4),eigen(3)

   end if
END IF
RETURN

1 FORMAT('Mechanism information')
51 format("Best Double Source for moment tensor: ")
52 format(3X,"mrr   mtt   mpp   mrt   mrp   mtp ")
53 FORMAT(6F6.2)
2 FORMAT("fault plane(strike dip rake): ",3F8.2)
3 FORMAT("fault plane(strike dip rake): ",3F8.2)
4 format("Principal Axes : ")
5 FORMAT(6X,"azi      plg    eigen")
6 FORMAT(X,"P ",3F8.2)
7 format(X,"B ",3F8.2)
8 format(X,"T ",3F8.2)

END Subroutine FMREPS
